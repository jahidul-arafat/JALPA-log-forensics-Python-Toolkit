import os
from json2html import *
import logPuzzleSupportTools as tool
import json

from pycallgraph import PyCallGraph
from pycallgraph.output import GraphvizOutput
from pycallgraph import Config
from pycallgraph import GlobbingFilter

def htmlModifier(jsonFileName,infoTable,programName):
    htmlStr=\
    ''' <!DOCTYPE html>
        <html>
            <head>
                <title>{0}</title>
            </head>
            <body>
                <h1>Report on: {1}</h1>
                <h2>Generated Using: {2}</h2>
                <h3>Generated By: Jahid Arafat</h3>
                <p>{3}</p>
            </body>
        </html>'''.format(jsonFileName,jsonFileName,programName,infoTable)
    return htmlStr


def getAllJSONFiles(jsonDir):
    jsonFilesDict={}
    for fetchedFile in os.listdir(jsonDir):
        if fetchedFile.endswith(".json"):
            jsonFilesDict[fetchedFile]=os.path.join(jsonDir,fetchedFile)

    return jsonFilesDict

def generateHTMLFromJSON(unalteredRepoDir,jsonFilesDict):
    htmlDir=unalteredRepoDir+"/"+"HTML_Files"
    tool.createDirectory(htmlDir)
    os.chdir(htmlDir)
    for jFile,jFilePath in jsonFilesDict.items(): #this line troubled me most, always use .items() in dict
        with open(jFilePath) as fp:
            infoFromJson=json.load(fp) #dict type
        tableStr=json2html.convert(json=infoFromJson)
        htmlStr=htmlModifier(jFile.split(".")[0],tableStr,os.path.basename(__file__))
        tool.writeReportToFile("{}.html".format(jFile.split(".")[0]),htmlStr)

def getMasterRepository(outputFolderName):
    toDir="/home/jahid/Desktop/AllMyWorks/InformationSecurity/google/google-python-exercises/logpuzzle/logSolverMyCodeRepo/simulationResults/outputGenerated"
    toDir=toDir+"/"+outputFolderName #../animalLogSimulation (This directory was not changed further)
    unalteredRepoDir=toDir #../animalLogSimulation
    return unalteredRepoDir

def main():
    scriptName=os.path.basename(__file__).split(".")[0]
    funcCallDict={}

    unalteredRepoDir=getMasterRepository("animalLogSimulation")
    pyCallGraphDir=unalteredRepoDir+"/"+"pyCallGraph"
    tool.createDirectory(pyCallGraphDir)

    funcCallDict[scriptName]=[tool.__name__]
    funcCallDict[tool.__name__]=[tool.createDirectory.__name__]


    #config = Config(max_depth=1)

    graphviz=GraphvizOutput()
    graphviz.output_file="{}.png".format(generateHTMLFromJSON.__name__)

    with PyCallGraph(output=graphviz):
        os.chdir(pyCallGraphDir)
        jsonDir="/home/jahid/Desktop/AllMyWorks/InformationSecurity/google/google-python-exercises/logpuzzle/logSolverMyCodeRepo/simulationResults/outputGenerated/animalLogSimulation/JSON_Files"
        unalteredRepoDict="/home/jahid/Desktop/AllMyWorks/InformationSecurity/google/google-python-exercises/logpuzzle/logSolverMyCodeRepo/simulationResults/outputGenerated/animalLogSimulation"
        jsonFilesDict=getAllJSONFiles(jsonDir)

        funcCallDict[scriptName].append(getAllJSONFiles.__name__)


        generateHTMLFromJSON(unalteredRepoDict,jsonFilesDict)
        funcCallDict[scriptName].append(generateHTMLFromJSON.__name__)

        os.chdir("/home/jahid/Desktop/AllMyWorks/InformationSecurity/google/google-python-exercises/logpuzzle/logSolverMyCodeRepo/source")
    print funcCallDict
if __name__ == '__main__':
    main()
